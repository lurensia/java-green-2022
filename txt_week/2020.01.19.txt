자바 -> 변수 ->private 필수
메서드 -> public ▲ 변경 

====================================
객체 지향의 3요소: 협력, 메시지, 책임
협력: DIP를 지키며 협력할 것.
협력할때는 추상적인것을 바라본다.

협력시 메시지를 바라보며 협력하는데 그 메시지를 보내는 행위를 메서드행위라고 한다.
그 메서드를 지니고 있는것을 책임이라고한다.

객체지향의 3요소:
1. 객체들간의 협력
2. 메시지 교환
3. 책임
dip
srp
객체는 행위를 통해 변경

///
1.패키지 생성 
srp

2. 클래스 4개 생성
-요리사.java
-종업원.java
-손님.java
-음식.java


///

char = 2바이트 자료형(딱 2바이트만 담을 수 있다.0)'' 사용, 저 안에는 딱 2바이트만 들어간다.

char + 배열:
char [] s1 = new char[5];
s1[0] = 가
s1[1] = 나
s1[2] = 다
s1[3] = 라
s1[4] = 마

String = 가변성
단점: 엑세스가 char보다 느리다.//안중요
-> 가나다 = 6바이트/ 가 = 2바이트
Char배열 = 고정형
->가나다 = 6바이트/ 가 =6바이트

문자열은 무조건 6바이트.


String이 들고 있는 메서드. equals == 같다.


=====================================
1. Scannder로 문자열 받기
--A01-이름: 홍길동 - 전화번호:0102222 - 성별: 남 - 나이: 20
2. -로 split()
3. 첫 데이터가 A01이면 파싱시작
-파싱시작 -> 1번지 부터 파싱 시작.
->String name = "홍길동";
->String tell = "0102222";
->char gender = '남';
->int age = 20;(integen parse int)
->공백빼기
->String의 메세드 찾기
->클래스에 옮겨 적기
(???)
-프로그램종료 출력
-------------------------------------


마무리 정리
자바 기본문법 - 모든 언어 공통 문법
(if, while, for, 자료형, 클래스, 메서드)
객체지향 (3원칙) ,JVM아키텍처, 다형성, 추상클래스, 인터페이스, 상속
앞으로 배울것
- wrapper 클래스
- 컬렉션
- 제네릭
- 버퍼 (입출력)
- 스레드
- 소켓통신
========================
시간이 허락된다면 하루 이틀 정도해서 자바를 이용한 게임제작 체험을 하려고 한다.




srp: 책임을 알고있으면 new를 어디에 사용해야 할 지 알 수 있다.
dip: 오버라이드, 상속에 대해 명확히 이해 할 수 있다.
상태는 행위를 통해 변화한다: 코드를 이렇게 짜는 이유를 모르는것 같아서
그래서 알려주셨다고들 한다.